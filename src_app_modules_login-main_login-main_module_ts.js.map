{"version":3,"file":"src_app_modules_login-main_login-main_module_ts.js","mappings":"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","sources":["./src/app/modules/login-main/login-main-routing.module.ts","./src/app/modules/login-main/login-main.module.ts","./src/app/modules/login-main/login/login.component.ts","./src/app/modules/login-main/login/login.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path:'', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginMainRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginMainRoutingModule } from './login-main-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    LoginMainRoutingModule\n  ]\n})\nexport class LoginMainModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { StorageService } from '../../../services/storage/storage.service';\r\nimport { DialogService } from '../../../services/dialog/dialog.service';\r\nimport { UsuarioService } from '../../../services/usuario/usuario.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.sass']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  isLoading = false;\r\n  showMsj = false;\r\n  errMsj = \"\";\r\n  form: FormGroup;\r\n  hide = true;\r\n  constructor(\r\n    private _ss: StorageService,\r\n    private _ds: DialogService,\r\n    private _router: Router,\r\n    private _us: UsuarioService,\r\n  ) {\r\n    if (this._us.isAuthenticated()) {\r\n      this._router.navigate([\"/\"]);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let userId = this._ss.getPreference(\"lastLoginId\") || \"\";\r\n    this.form = new FormGroup({\r\n      idUsuario: new FormControl(userId, [Validators.required]),\r\n      contrasena: new FormControl(\"\", [Validators.required])\r\n    });\r\n  }\r\n  async login() {\r\n    if (this.form.valid) {\r\n      try {\r\n\r\n        this.isLoading = true;\r\n        const loginData = <any>await this._us.login(this.form.value)\r\n        this._ss.setUsrConfig(loginData);\r\n        this._us.setUserConfig(loginData);\r\n        this._ss.setPreference(\"lastLoginId\", this.form.value.idUsuario);\r\n        this._router.navigate([\"/dashboard\"]);\r\n      } catch (error) {\r\n        const { status } = error;\r\n        if (status === 401) this._ds.showSnack(\"Credenciales invalidas\", null, \"error\");\r\n        else this._ds.showSnack(\"Sing in error. Please try again\", null, \"error\");\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"root-container animated fadeIn fast\">\r\n    <div class=\"left-layout\">\r\n        <div class=\"logo-small-device\">\r\n            <img class=\"logo\" src=\"https://zebralogistics.net/wp-content/uploads/2020/01/zebra-logistics-blanco.svg\" />\r\n        </div>\r\n        <div class=\"login-form-container\">\r\n            <h1>Inicia Sesi칩n</h1>\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"login()\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\">\r\n                        <mat-form-field color=\"accent\">\r\n                            <mat-label>Usuario</mat-label>\r\n                            <input matInput formControlName=\"idUsuario\" />\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col s12\">\r\n                        <mat-form-field color=\"accent\">\r\n                            <mat-label>Contrase침a</mat-label>\r\n                            <input matInput formControlName=\"contrasena\" [type]=\"hide ? 'password' : 'text'\" />\r\n                            <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                                <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col s12 center-align\">\r\n                        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\" class=\"mt5 login-button\">\r\n                            Iniciar sesi칩n\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"col s12\">\r\n                        <div class=\"reset_password\">\r\n                            <a [routerLink]=\"['/login','forgot']\">\r\n                                Has olvidado tu contrase침a?\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"image-container\">\r\n        <div class=\"radar-logo\">\r\n            <img src=\"https://zebralogistics.net/wp-content/uploads/2020/01/zebra-logistics-blanco.svg\" />\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n"],"names":["FormControl","FormGroup","Validators","LoginComponent","constructor","_ss","_ds","_router","_us","isAuthenticated","navigate","ngOnInit","userId","getPreference","form","idUsuario","required","contrasena","login","valid","isLoading","loginData","value","setUsrConfig","setUserConfig","setPreference","error","status","showSnack","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///"}